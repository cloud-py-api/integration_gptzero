name: Create Release

on:
  workflow_dispatch:

env:
  APP_NAME: integration_gptzero

jobs:
  build_app:
    runs-on: ubuntu-latest
    name: Build and create release

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get release info
        run: |
          APP_VERSION=$(sed -n "s/<version>\(.*\)<\/version>/\\1/p" ./appinfo/info.xml | tr -d '\t')
          IS_NIGHTLY=$(if [[ $APP_VERSION == *"beta"* ]]; then echo "true"; else echo "false"; fi)
          echo RELEASE_TAG="v$APP_VERSION" >> $GITHUB_ENV
          CHANGELOG=$(grep -oPz "(?s)##\s\[$APP_VERSION\s.+?(?=##\s\[|$)" ./CHANGELOG.md | tr -d '\0' | sed /^$/d | sed '1d')
          CHANGELOG=$(echo "$CHANGELOG" | sed '$!N;s/^###.*\n#/#/;P;D' | sed '$!N;s/^###.*\n#/#/;P;D' | sed '${/^###/d;}')
          if [ "$CHANGELOG" == "" ]; then
            echo "changelog is empty!"
            exit 1
          fi
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "$CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "IS_NIGHTLY=$IS_NIGHTLY" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Build
        run: |
          npm install --deps
          npm run build

      - name: Install Krankerl
        run: |
          wget https://github.com/ChristophWurst/krankerl/releases/download/v0.14.0/krankerl_0.14.0_amd64.deb
          sudo dpkg -i krankerl_0.14.0_amd64.deb

      - name: Package app
        run: krankerl package || make appstore

      # - name: Sign app
      #   run: |
      #     # Extracting release
      #     cd ${{ env.APP_NAME }}/build/artifacts
      #     tar -xvf ${{ env.APP_NAME }}.tar.gz
      #     cd ../../../
      #     # Setting up keys
      #     echo "${{ secrets.APP_PRIVATE_KEY }}" > ${{ env.APP_NAME }}.key
      #     echo "${{ secrets.APP_PUBLIC_CRT }}" > ${{ env.APP_NAME.key }}
      #     # Signing
      #     php nextcloud/occ integrity:sign-app --privateKey=../${{ env.APP_NAME }}.key --certificate=../${{ env.APP_NAME }}.crt --path=../${{ env.APP_NAME }}/build/artifacts/${{ env.APP_NAME }}
      #     # Rebuilding archive
      #     cd ${{ env.APP_NAME }}/build/artifacts
      #     tar -zcvf ${{ env.APP_NAME }}.tar.gz ${{ env.APP_NAME }}

      - name: Create release draft
        uses: ncipollo/release-action@v1.12.0
        with:
          name: ${{ env.RELEASE_TAG }}
          tag: ${{ env.RELEASE_TAG }}
          prerelease: ${{ env.IS_NIGHTLY }}
          commit: ${{ github.ref }}
          draft: true
          body: ${{ env.CHANGELOG }}
          artifacts: "build/artifacts/${{ env.APP_NAME }}.tar.gz"
          token: ${{ secrets.GITHUB_TOKEN }}
          artifactErrorsFailBuild: true
